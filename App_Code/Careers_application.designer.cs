#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataSource")]
public partial class Careers_applicationDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertCareers_applications(Careers_applications instance);
  partial void UpdateCareers_applications(Careers_applications instance);
  partial void DeleteCareers_applications(Careers_applications instance);
  #endregion
	
	public Careers_applicationDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DB_69755_aspclassConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public Careers_applicationDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public Careers_applicationDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public Careers_applicationDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public Careers_applicationDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Careers_applications> Careers_applications
	{
		get
		{
			return this.GetTable<Careers_applications>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Careers_applications")]
public partial class Careers_applications : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _firstname;
	
	private string _lastname;
	
	private string _email;
	
	private string _phone;
	
	private string _city;
	
	private string _job_type;
	
	private string _way_find_us;
	
	private string _resume;
	
	private string _recieveInfo;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void Onjob_typeChanging(string value);
    partial void Onjob_typeChanged();
    partial void Onway_find_usChanging(string value);
    partial void Onway_find_usChanged();
    partial void OnresumeChanging(string value);
    partial void OnresumeChanged();
    partial void OnrecieveInfoChanging(string value);
    partial void OnrecieveInfoChanged();
    #endregion
	
	public Careers_applications()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string firstname
	{
		get
		{
			return this._firstname;
		}
		set
		{
			if ((this._firstname != value))
			{
				this.OnfirstnameChanging(value);
				this.SendPropertyChanging();
				this._firstname = value;
				this.SendPropertyChanged("firstname");
				this.OnfirstnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string lastname
	{
		get
		{
			return this._lastname;
		}
		set
		{
			if ((this._lastname != value))
			{
				this.OnlastnameChanging(value);
				this.SendPropertyChanging();
				this._lastname = value;
				this.SendPropertyChanged("lastname");
				this.OnlastnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string phone
	{
		get
		{
			return this._phone;
		}
		set
		{
			if ((this._phone != value))
			{
				this.OnphoneChanging(value);
				this.SendPropertyChanging();
				this._phone = value;
				this.SendPropertyChanged("phone");
				this.OnphoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(50)")]
	public string city
	{
		get
		{
			return this._city;
		}
		set
		{
			if ((this._city != value))
			{
				this.OncityChanging(value);
				this.SendPropertyChanging();
				this._city = value;
				this.SendPropertyChanged("city");
				this.OncityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job_type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string job_type
	{
		get
		{
			return this._job_type;
		}
		set
		{
			if ((this._job_type != value))
			{
				this.Onjob_typeChanging(value);
				this.SendPropertyChanging();
				this._job_type = value;
				this.SendPropertyChanged("job_type");
				this.Onjob_typeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_way_find_us", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string way_find_us
	{
		get
		{
			return this._way_find_us;
		}
		set
		{
			if ((this._way_find_us != value))
			{
				this.Onway_find_usChanging(value);
				this.SendPropertyChanging();
				this._way_find_us = value;
				this.SendPropertyChanged("way_find_us");
				this.Onway_find_usChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resume", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string resume
	{
		get
		{
			return this._resume;
		}
		set
		{
			if ((this._resume != value))
			{
				this.OnresumeChanging(value);
				this.SendPropertyChanging();
				this._resume = value;
				this.SendPropertyChanged("resume");
				this.OnresumeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recieveInfo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string recieveInfo
	{
		get
		{
			return this._recieveInfo;
		}
		set
		{
			if ((this._recieveInfo != value))
			{
				this.OnrecieveInfoChanging(value);
				this.SendPropertyChanging();
				this._recieveInfo = value;
				this.SendPropertyChanged("recieveInfo");
				this.OnrecieveInfoChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
