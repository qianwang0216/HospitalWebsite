#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataSource")]
public partial class CalendarDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertevent_calendar(event_calendar instance);
  partial void Updateevent_calendar(event_calendar instance);
  partial void Deleteevent_calendar(event_calendar instance);
  #endregion
	
	public CalendarDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DataSourceConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public CalendarDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CalendarDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CalendarDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CalendarDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<event_calendar> event_calendar
	{
		get
		{
			return this.GetTable<event_calendar>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.event_calendar")]
public partial class event_calendar : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _event_id;
	
	private string _event_title;
	
	private string _event_content;
	
	private System.Nullable<System.DateTime> _date;
	
	private System.Nullable<System.TimeSpan> _start_time;
	
	private System.Nullable<System.TimeSpan> _end_time;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onevent_idChanging(int value);
    partial void Onevent_idChanged();
    partial void Onevent_titleChanging(string value);
    partial void Onevent_titleChanged();
    partial void Onevent_contentChanging(string value);
    partial void Onevent_contentChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void Onstart_timeChanging(System.Nullable<System.TimeSpan> value);
    partial void Onstart_timeChanged();
    partial void Onend_timeChanging(System.Nullable<System.TimeSpan> value);
    partial void Onend_timeChanged();
    #endregion
	
	public event_calendar()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int event_id
	{
		get
		{
			return this._event_id;
		}
		set
		{
			if ((this._event_id != value))
			{
				this.Onevent_idChanging(value);
				this.SendPropertyChanging();
				this._event_id = value;
				this.SendPropertyChanged("event_id");
				this.Onevent_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_title", DbType="NVarChar(50)")]
	public string event_title
	{
		get
		{
			return this._event_title;
		}
		set
		{
			if ((this._event_title != value))
			{
				this.Onevent_titleChanging(value);
				this.SendPropertyChanging();
				this._event_title = value;
				this.SendPropertyChanged("event_title");
				this.Onevent_titleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_content", DbType="NVarChar(MAX)")]
	public string event_content
	{
		get
		{
			return this._event_content;
		}
		set
		{
			if ((this._event_content != value))
			{
				this.Onevent_contentChanging(value);
				this.SendPropertyChanging();
				this._event_content = value;
				this.SendPropertyChanged("event_content");
				this.Onevent_contentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
	public System.Nullable<System.DateTime> date
	{
		get
		{
			return this._date;
		}
		set
		{
			if ((this._date != value))
			{
				this.OndateChanging(value);
				this.SendPropertyChanging();
				this._date = value;
				this.SendPropertyChanged("date");
				this.OndateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_time", DbType="Time")]
	public System.Nullable<System.TimeSpan> start_time
	{
		get
		{
			return this._start_time;
		}
		set
		{
			if ((this._start_time != value))
			{
				this.Onstart_timeChanging(value);
				this.SendPropertyChanging();
				this._start_time = value;
				this.SendPropertyChanged("start_time");
				this.Onstart_timeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_time", DbType="Time")]
	public System.Nullable<System.TimeSpan> end_time
	{
		get
		{
			return this._end_time;
		}
		set
		{
			if ((this._end_time != value))
			{
				this.Onend_timeChanging(value);
				this.SendPropertyChanging();
				this._end_time = value;
				this.SendPropertyChanged("end_time");
				this.Onend_timeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
