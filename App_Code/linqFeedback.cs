using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

/// <summary>
/// Summary description for feedbackClass
/// </summary>
public class linqFeedback
{

    public IQueryable<feedback> getfeedbacks() // get the database from feedback table
    {
        feedbackDataContext objFB = new feedbackDataContext(); //An instance of the data context class with the name which was generated by LINQ
        var allfeedbacks = objFB.feedbacks.Select(x => x); // <-- method syntax -->
        //For binding the data bound control
        return allfeedbacks;
    }
    //Call the value by id
    public IQueryable<feedback> getfeedbackByID(int _id)
    {
        feedbackDataContext objFB = new feedbackDataContext();
        var allfeedbacks = objFB.feedbacks.Where(x => x.fb_Id == _id).Select(x => x);
        return allfeedbacks;
    }

    //Call the value by section
    public IQueryable<feedback> getfeedbackByType(string _type)
    {
        feedbackDataContext objFB = new feedbackDataContext();
        var allfeedbacks = objFB.feedbacks.Where(x => x.section == _type).Select(x => x);
        return allfeedbacks;
    }

   // This is LINQ insert
    public bool commitInsert(string _fname, string _email, string _rdepartment, string _title, string _content, string _section)// Generate property for insert
    {
        //Creat an example of the table
        feedbackDataContext objFB = new feedbackDataContext();
        using (objFB)
        {//Set the value to table from user page
            feedback objInFB = new feedback();
            objInFB.fname = _fname; // pass the variable to field of table
            objInFB.email = _email;
            objInFB.rdepartment = _rdepartment;
            objInFB.title = _title;
            objInFB.content = _content;
            objInFB.section = _section;
            objFB.feedbacks.InsertOnSubmit(objInFB);//Insert command
            objFB.SubmitChanges();// Tells Linq to execute for inserting data
            return true;

        }
    }

    //This is LINQ delete
    public bool commitDelete(int _id)
    {
        feedbackDataContext objFB = new feedbackDataContext();
        using (objFB)
        {
            var objDelFB = objFB.feedbacks.Single(x => x.fb_Id == _id);
            objFB.feedbacks.DeleteOnSubmit(objDelFB);//Delete command
            objFB.SubmitChanges();// Tells Linq to execute for deleting data
            return true;
        }
    }

}
